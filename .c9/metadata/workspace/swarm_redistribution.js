{"filter":false,"title":"swarm_redistribution.js","tooltip":"/swarm_redistribution.js","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":28,"column":3},"end":{"row":28,"column":4},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":4},"end":{"row":28,"column":5},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":5},"end":{"row":28,"column":6},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":6},"end":{"row":28,"column":7},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":7},"end":{"row":28,"column":8},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":7},"end":{"row":28,"column":8},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":7},"end":{"row":28,"column":8},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":8},"end":{"row":28,"column":9},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":9},"end":{"row":28,"column":10},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":10},"end":{"row":28,"column":12},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":10},"end":{"row":28,"column":12},"action":"remove","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":9},"end":{"row":28,"column":10},"action":"remove","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":8},"end":{"row":28,"column":9},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":7},"end":{"row":28,"column":8},"action":"remove","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":7},"end":{"row":28,"column":8},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":8},"end":{"row":28,"column":9},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":9},"end":{"row":28,"column":10},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":10},"end":{"row":28,"column":11},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":11},"end":{"row":28,"column":13},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":12},"end":{"row":28,"column":13},"action":"insert","lines":["C"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":14},"end":{"row":28,"column":15},"action":"insert","lines":["L"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":15},"end":{"row":28,"column":16},"action":"insert","lines":["L"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":16},"end":{"row":28,"column":17},"action":"insert","lines":["E"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":17},"end":{"row":28,"column":18},"action":"insert","lines":["C"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":18},"end":{"row":28,"column":19},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":19},"end":{"row":28,"column":20},"action":"insert","lines":["I"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":20},"end":{"row":28,"column":21},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":21},"end":{"row":28,"column":22},"action":"insert","lines":["N"]}]}],[{"group":"doc","deltas":[{"start":{"row":212,"column":84},"end":{"row":213,"column":0},"action":"insert","lines":["",""]},{"start":{"row":213,"column":0},"end":{"row":213,"column":16},"action":"insert","lines":["                "]}]}],[{"group":"doc","deltas":[{"start":{"row":39,"column":57},"end":{"row":40,"column":0},"action":"insert","lines":["",""]},{"start":{"row":40,"column":0},"end":{"row":40,"column":8},"action":"insert","lines":["        "]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":8},"end":{"row":40,"column":9},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":9},"end":{"row":40,"column":10},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":10},"end":{"row":40,"column":11},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":11},"end":{"row":40,"column":12},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":12},"end":{"row":40,"column":13},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":13},"end":{"row":40,"column":14},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":14},"end":{"row":40,"column":15},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":15},"end":{"row":40,"column":16},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":16},"end":{"row":40,"column":17},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":17},"end":{"row":40,"column":18},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":18},"end":{"row":40,"column":19},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":19},"end":{"row":40,"column":21},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":20},"end":{"row":40,"column":22},"action":"insert","lines":["\"\""]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":21},"end":{"row":40,"column":22},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":22},"end":{"row":40,"column":23},"action":"insert","lines":["E"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":23},"end":{"row":40,"column":24},"action":"insert","lines":["S"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":24},"end":{"row":40,"column":25},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":180,"column":0},"end":{"row":181,"column":0},"action":"remove","lines":["            COLLECTION = lines[x][y].account;",""]},{"start":{"row":180,"column":0},"end":{"row":181,"column":0},"action":"insert","lines":["            COLLECTION = db.collection(lines[x][y].account);",""]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"remove","lines":["console.log(COLLECTION)",""]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":0},"end":{"row":226,"column":29},"action":"remove","lines":["","// ---------------------------- swarm-redistribution ----------------------------------","","// FIRST, collect data from the coin platform",""," // this example connects with http://client.basicincome.co","","","var COLLECTION = db.collection(account_id);","    var taxRate","    var total_amount","","    ","    var currency","    var q = 0","","var get_dividend_lines = function(callback){","    get_wallet()","    function get_wallet(){","    COLLECTION.find({type:\"tax_blob\"}, function(err,doc){","        console.log(\"TEST\")","        console.log(doc)","        if(q<doc.length){","        total_amount = doc[q].total_amount","        currency = doc[q].currency;","","        ","        // get the taxRate","        COLLECTION.find({type: \"wallet\", currency: currency}, function(err,doc){","            console.log(doc)","        taxRate=doc.taxRate;","        get_dividend_pathway()","        })","        }","    });","    }","    ","    function get_dividend_pathway(){","  ","    console.log(\"scanning collection: \"+ COLLECTION);","    COLLECTION.find({type: \"dividend_pathway\", currency: currency},function(err, doc) {","    console.log(doc)","    callback(doc)","","    });","","}","","}","","        ","","","var get_collection = function() {","    //connect your coin here, this is how you connect to the API","    //the callback feeds collection/dividend-pathways","    //this example connects with http://client.basicincome.co","get_dividend_lines(swarm_redistribution)","}","","get_collection()        ","","","// -------------------------- STUFF:","// ALL THIS needs to be improved...","","    var lines = [];//lines.push(line)","   ","    ","    var x = 0;//recursion()","    var y = 0;//recursion()","   ","    var temp = \" \";","    ","    var taxRate_quota_temp = []","    var taxRate_quota_sum = 0","    var taxRate_switch = false","    var taxRate_x;","    var taxRate_ratio_x;","","","","","","// ---------------------- SWARM-REDISTRIBUTION ----------------------------","","function swarm_redistribution(pathway){","","console.log(pathway)","","// ------- First, construct fractal dividend lines -----------------","// see http://www.resilience.me/theory.html","",""," var w = 0;"," var line = []",""," if(pathway.length>0){","","    loop(pathway, line, w);// add taxRate ratios","    "," }"," else{"," console.log(\"collection is empty\")"," next_node()"," }","","    ","    ","    ","    function loop(pathway, line, w) {","    var q = 0","    // calculate taxRatio","    console.log(w)","    console.log(pathway[w])","    var taxRate_y = pathway[w].taxRate","    if(taxRate_switch === false){","     taxRate_x = taxRate","     taxRate_ratio_x = 1","    }","    else taxRate_x = taxRate","    if(taxRate_y > taxRate_x)taxRate_y = taxRate_x","    var taxRate_ratio_y = Number(taxRate_y) / Number(taxRate_x)","    var taxRate_quota = Number(taxRate_ratio_x) * Number(taxRate_ratio_y)","    console.log(temp.indexOf(pathway[w].account))","    ","    // push lines","    if (temp.indexOf(pathway[w].account) === -1){","    temp+= pathway[w].account + \" \"","    line.push({account: pathway[w].account, currency: currency, taxRate: taxRate, taxRate_quota: taxRate_quota});","    taxRate_quota_temp.push(taxRate_quota)","    taxRate_quota_sum = Number(taxRate_quota_sum) + Number(taxRate_quota)","    q++","    }","    else console.log(\"CIRCULAR\");","    ","    w++;","    ","    if (w<pathway.length){loop(pathway, w, line)}","    else {","        if (q>0){","            console.log(line);//lists all dividend pathways in IOUs[0] for ACCOUNT_ID","            lines.push(line)","        };","        ","        next_node()","    }","    }","","      ","// STEP 2: branch out (add all dividend pathways for lines[x][i].account)        ","","","    function next_node(){","            if(x<lines.length){","            console.log(\"recursion nr \"+x)","        if(y<lines[x].length){","            console.log(\"taxRate_quota:\" +lines[x][y].taxRate_quota)","            taxRate_ratio_x = Number(lines[x][y].taxRate_quota)","            taxRate_x = lines[x][y].taxRate","            COLLECTION = db.collection(lines[x][y].account);","            y++;","            get_collection();","        }","                ","        else {","           x++;","           y = 0;","            console.log(\"recursion nr \"+x)","            get_collection()","        }","        ","            }","            else console.log(lines), console.log(\"END\"), outgoing_payments()","        }","         ","             ","    // ------- SECOND, outgoing payments -----------------","    // see http://www.resilience.me/theory.html ","    function outgoing_payments(){","         var total_amount_pie = Number(total_amount)/taxRate_quota_sum","         ","         // create outgoing payment","         x = 0","         y = 0","         loop()","         function loop(){","            if (x<lines.length){     ","                if (y<lines[x].length){","                ","                var amount = Number(total_amount_pie * lines[x][y].taxRate_quota)","                var currency = lines[x][y].currency","                var account = lines[x][y].account","                var payment = {account: account, amount: amount, currency: currency}","                ","            callback(payment)","                y++","                loop()","                }","                else x++","                loop()","            }else q++, get_collection();","         }","}","   ","","        ","}//end swarm_redistribution()"]},{"start":{"row":19,"column":0},"end":{"row":231,"column":29},"action":"insert","lines":["// ---------------------------- swarm-redistribution ----------------------------------","","","","","// FIRST, collect data from the coin platform",""," // this example connects with http://client.basicincome.co","","","var COLLECTION = db.collection('rLaKjMvLbrAJwnH4VpawQ6ot9epZqJmbfQ');","    ","    ","var q = 0//loop through all currencies","","function get_dividend_lines(callback){","    get_wallet()","    function get_wallet(){","    COLLECTION.find({type:\"tax_blob\"}, function(err,doc){","        ","        if(q<doc.length){","        var total_amount = doc[q].total_amount","        var currency = doc[q].currency","        ","        // get the taxRate","        COLLECTION.findOne({type: \"wallet\", currency: doc[q].currency}, function(err,doc){","","        var taxRate=doc.taxRate;","","        get_dividend_pathway(taxRate, currency, total_amount)","        })","        }","        else console.log(\"swarm-redistribution finished for all currencies\")","    });","    }","    ","    function get_dividend_pathway(taxRate, currency, total_amount){","  ","    console.log(\"scanning collection: \"+ COLLECTION);","    COLLECTION.find({type: \"dividend_pathway\", currency: currency},function(err, doc) {","            console.log(taxRate)","","    callback(doc, taxRate, total_amount)","","    });","","}","","}","","        ","","var get_collection = function() {","    //connect your coin here, this is how you connect to the API","    //the callback feeds collection/dividend-pathways","    //this example connects with http://client.basicincome.co","get_dividend_lines(swarm_redistribution)","}","get_collection()","","","// -------------------------- STUFF:","// ALL THIS needs to be improved...","","    var lines = [];//lines.push(line)","   ","    ","    var x = 0;//recursion()","    var y = 0;//recursion()","   ","    var temp = \" \";","    ","    var taxRate_quota_temp = []","    var taxRate_quota_sum = 0","    var taxRate_switch = false","    var taxRate_x;","    var taxRate_ratio_x;","","","","","","// ---------------------- SWARM-REDISTRIBUTION ----------------------------","","function swarm_redistribution(pathway, taxRate, total_amount){","","","// ------- First, construct fractal dividend lines -----------------","// see http://www.resilience.me/theory.html","    console.log(taxRate)","",""," var w = 0;"," var line = []",""," if(pathway.length>0){","","    loop(pathway, line, w, taxRate, total_amount);// add taxRate ratios","    "," }"," else{"," console.log(\"collection is empty\")"," next_node(total_amount)"," }","","    ","    ","    ","    function loop(pathway, line, w, taxRate, total_amount) {","    var c = 0","    // calculate taxRatio","    function calculate_taxRatio(pathway, line, w, taxRate, total_amount){","    console.log(taxRate)","    var taxRate_y = pathway[w].taxRate","    if(taxRate_switch === false){","     taxRate_x = taxRate","     taxRate_ratio_x = 1","    }","    else taxRate_x = taxRate","    if(taxRate_y > taxRate_x)taxRate_y = taxRate_x","    var taxRate_ratio_y = Number(taxRate_y) / Number(taxRate_x)","    var taxRate_quota = Number(taxRate_ratio_x) * Number(taxRate_ratio_y)","    push_lines(taxRate_quota, total_amount)","    }","    calculate_taxRatio(pathway, line, w, taxRate, total_amount)","","    function push_lines(taxRate_quota, total_amount){","","    console.log(temp.indexOf(pathway[w].account))","    ","    // push lines","    if (temp.indexOf(pathway[w].account) === -1){","    temp+= pathway[w].account + \" \"","    line.push({account: pathway[w].account, currency: pathway[w].currency, taxRate: taxRate, taxRate_quota: taxRate_quota});","    taxRate_quota_temp.push(taxRate_quota)","    taxRate_quota_sum = Number(taxRate_quota_sum) + Number(taxRate_quota)","    c++","    }","    else console.log(\"CIRCULAR\");","    ","    w++;","    ","    if (w<pathway.length){loop(pathway, w, line)}","    else {","        if (c>0){","            console.log(line);//lists all dividend pathways in IOUs[0] for ACCOUNT_ID","            lines.push(line)","        };","        ","        next_node(total_amount)","    }","    }","    }","","      ","// STEP 2: branch out (add all dividend pathways for lines[x][i].account)        ","","","    function next_node(total_amount){","            if(x<lines.length){","            console.log(\"recursion nr \"+x)","        if(y<lines[x].length){","            console.log(\"taxRate_quota:\" +lines[x][y].taxRate_quota)","            taxRate_ratio_x = Number(lines[x][y].taxRate_quota)","            taxRate_x = lines[x][y].taxRate","            COLLECTION = db.collection(lines[x][y].account);","            y++;","            get_collection();","        }","                ","        else {","           x++;","           y = 0;","            console.log(\"recursion nr \"+x)","            get_collection()","        }","        ","            }","            else console.log(lines), console.log(\"END\"), outgoing_payments(total_amount)","        }","         ","             ","    // ------- SECOND, outgoing payments -----------------","    // see http://www.resilience.me/theory.html ","    function outgoing_payments(total_amount){","         var total_amount_pie = Number(total_amount)/taxRate_quota_sum","         ","         // create outgoing payment","         x = 0","         y = 0","         loop()","         function loop(){","","            if (x<lines.length){     ","                if (y<lines[x].length){","                ","                var amount = Number(total_amount_pie * lines[x][y].taxRate_quota)","                var currency = lines[x][y].currency","                var account = lines[x][y].account","                var payment = {account: account, amount: amount, currency: currency}","                ","                console.log(payment)","                y++","                loop()","                }","                else x++, loop()","            }else q++, console.log(\"swarm-redistribution for currency: \"+lines[0][0].currency +\" is done. loading next currency...\"),get_collection();","         }//create outgoing payments to everyone in the swarm","    }","   ","","        ","}//end swarm_redistribution()"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":17},"end":{"row":220,"column":27},"action":"remove","lines":["onsole.log"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":16},"end":{"row":220,"column":17},"action":"remove","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":16},"end":{"row":220,"column":17},"action":"insert","lines":["c"]},{"start":{"row":220,"column":17},"end":{"row":220,"column":18},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":18},"end":{"row":220,"column":19},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":19},"end":{"row":220,"column":20},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":20},"end":{"row":220,"column":21},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":21},"end":{"row":220,"column":22},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":22},"end":{"row":220,"column":23},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":23},"end":{"row":220,"column":24},"action":"insert","lines":["k"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":32},"end":{"row":29,"column":66},"action":"remove","lines":["rLaKjMvLbrAJwnH4VpawQ6ot9epZqJmbfQ"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":32},"end":{"row":29,"column":33},"action":"remove","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":31},"end":{"row":29,"column":32},"action":"remove","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":31},"end":{"row":29,"column":32},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":32},"end":{"row":29,"column":33},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":33},"end":{"row":29,"column":34},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":34},"end":{"row":29,"column":35},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":35},"end":{"row":29,"column":36},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":36},"end":{"row":29,"column":37},"action":"insert","lines":["n"]},{"start":{"row":29,"column":37},"end":{"row":29,"column":38},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":38},"end":{"row":29,"column":39},"action":"insert","lines":["_"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":39},"end":{"row":29,"column":40},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":40},"end":{"row":29,"column":41},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":0},"end":{"row":231,"column":29},"action":"remove","lines":["var q = 0//loop through all currencies","","function get_dividend_lines(callback){","    get_wallet()","    function get_wallet(){","    COLLECTION.find({type:\"tax_blob\"}, function(err,doc){","        ","        if(q<doc.length){","        var total_amount = doc[q].total_amount","        var currency = doc[q].currency","        ","        // get the taxRate","        COLLECTION.findOne({type: \"wallet\", currency: doc[q].currency}, function(err,doc){","","        var taxRate=doc.taxRate;","","        get_dividend_pathway(taxRate, currency, total_amount)","        })","        }","        else console.log(\"swarm-redistribution finished for all currencies\")","    });","    }","    ","    function get_dividend_pathway(taxRate, currency, total_amount){","  ","    console.log(\"scanning collection: \"+ COLLECTION);","    COLLECTION.find({type: \"dividend_pathway\", currency: currency},function(err, doc) {","            console.log(taxRate)","","    callback(doc, taxRate, total_amount)","","    });","","}","","}","","        ","","var get_collection = function() {","    //connect your coin here, this is how you connect to the API","    //the callback feeds collection/dividend-pathways","    //this example connects with http://client.basicincome.co","get_dividend_lines(swarm_redistribution)","}","get_collection()","","","// -------------------------- STUFF:","// ALL THIS needs to be improved...","","    var lines = [];//lines.push(line)","   ","    ","    var x = 0;//recursion()","    var y = 0;//recursion()","   ","    var temp = \" \";","    ","    var taxRate_quota_temp = []","    var taxRate_quota_sum = 0","    var taxRate_switch = false","    var taxRate_x;","    var taxRate_ratio_x;","","","","","","// ---------------------- SWARM-REDISTRIBUTION ----------------------------","","function swarm_redistribution(pathway, taxRate, total_amount){","","","// ------- First, construct fractal dividend lines -----------------","// see http://www.resilience.me/theory.html","    console.log(taxRate)","",""," var w = 0;"," var line = []",""," if(pathway.length>0){","","    loop(pathway, line, w, taxRate, total_amount);// add taxRate ratios","    "," }"," else{"," console.log(\"collection is empty\")"," next_node(total_amount)"," }","","    ","    ","    ","    function loop(pathway, line, w, taxRate, total_amount) {","    var c = 0","    // calculate taxRatio","    function calculate_taxRatio(pathway, line, w, taxRate, total_amount){","    console.log(taxRate)","    var taxRate_y = pathway[w].taxRate","    if(taxRate_switch === false){","     taxRate_x = taxRate","     taxRate_ratio_x = 1","    }","    else taxRate_x = taxRate","    if(taxRate_y > taxRate_x)taxRate_y = taxRate_x","    var taxRate_ratio_y = Number(taxRate_y) / Number(taxRate_x)","    var taxRate_quota = Number(taxRate_ratio_x) * Number(taxRate_ratio_y)","    push_lines(taxRate_quota, total_amount)","    }","    calculate_taxRatio(pathway, line, w, taxRate, total_amount)","","    function push_lines(taxRate_quota, total_amount){","","    console.log(temp.indexOf(pathway[w].account))","    ","    // push lines","    if (temp.indexOf(pathway[w].account) === -1){","    temp+= pathway[w].account + \" \"","    line.push({account: pathway[w].account, currency: pathway[w].currency, taxRate: taxRate, taxRate_quota: taxRate_quota});","    taxRate_quota_temp.push(taxRate_quota)","    taxRate_quota_sum = Number(taxRate_quota_sum) + Number(taxRate_quota)","    c++","    }","    else console.log(\"CIRCULAR\");","    ","    w++;","    ","    if (w<pathway.length){loop(pathway, w, line)}","    else {","        if (c>0){","            console.log(line);//lists all dividend pathways in IOUs[0] for ACCOUNT_ID","            lines.push(line)","        };","        ","        next_node(total_amount)","    }","    }","    }","","      ","// STEP 2: branch out (add all dividend pathways for lines[x][i].account)        ","","","    function next_node(total_amount){","            if(x<lines.length){","            console.log(\"recursion nr \"+x)","        if(y<lines[x].length){","            console.log(\"taxRate_quota:\" +lines[x][y].taxRate_quota)","            taxRate_ratio_x = Number(lines[x][y].taxRate_quota)","            taxRate_x = lines[x][y].taxRate","            COLLECTION = db.collection(lines[x][y].account);","            y++;","            get_collection();","        }","                ","        else {","           x++;","           y = 0;","            console.log(\"recursion nr \"+x)","            get_collection()","        }","        ","            }","            else console.log(lines), console.log(\"END\"), outgoing_payments(total_amount)","        }","         ","             ","    // ------- SECOND, outgoing payments -----------------","    // see http://www.resilience.me/theory.html ","    function outgoing_payments(total_amount){","         var total_amount_pie = Number(total_amount)/taxRate_quota_sum","         ","         // create outgoing payment","         x = 0","         y = 0","         loop()","         function loop(){","","            if (x<lines.length){     ","                if (y<lines[x].length){","                ","                var amount = Number(total_amount_pie * lines[x][y].taxRate_quota)","                var currency = lines[x][y].currency","                var account = lines[x][y].account","                var payment = {account: account, amount: amount, currency: currency}","                ","                callback(payment)","                y++","                loop()","                }","                else x++, loop()","            }else q++, console.log(\"swarm-redistribution for currency: \"+lines[0][0].currency +\" is done. loading next currency...\"),get_collection();","         }//create outgoing payments to everyone in the swarm","    }","   ","","        ","}//end swarm_redistribution()"]},{"start":{"row":32,"column":0},"end":{"row":230,"column":29},"action":"insert","lines":["var q = 0//loop through all currencies","","function get_dividend_lines(callback){","    get_wallet()","    function get_wallet(){","    COLLECTION.find({type:\"tax_blob\"}, function(err,doc){","        ","        if(q<doc.length){","        var total_amount = doc[q].total_amount","        var currency = doc[q].currency","        console.log(doc)","        ","        // get the taxRate","        COLLECTION.findOne({type: \"wallet\", currency: doc[q].currency}, function(err,doc){","","        var taxRate=doc.taxRate;","","        get_dividend_pathway(taxRate, currency, total_amount)","        })","        }","        else console.log(\"swarm-redistribution finished for all currencies\")","    });","    }","    ","    function get_dividend_pathway(taxRate, currency, total_amount){","  ","    console.log(\"scanning collection: \"+ COLLECTION);","    COLLECTION.find({type: \"dividend_pathway\", currency: currency},function(err, doc) {","            console.log(taxRate)","","    callback(doc, taxRate, total_amount)","","    });","","}","","}","","        ","","var get_collection = function() {","    //connect your coin here, this is how you connect to the API","    //the callback feeds collection/dividend-pathways","    //this example connects with http://client.basicincome.co","get_dividend_lines(swarm_redistribution)","}","get_collection()","","","// -------------------------- STUFF:","// ALL THIS needs to be improved...","","    var lines = [];//lines.push(line)","   ","    ","    var x = 0;//recursion()","    var y = 0;//recursion()","   ","    var temp = \" \";","    ","    var taxRate_quota_temp = []","    var taxRate_quota_sum = 0","    var taxRate_switch = false","    var taxRate_x;","    var taxRate_ratio_x;","","","","","","// ---------------------- SWARM-REDISTRIBUTION ----------------------------","","function swarm_redistribution(pathway, taxRate, total_amount){","","","// ------- First, construct fractal dividend lines -----------------","// see http://www.resilience.me/theory.html","",""," var w = 0;"," var line = []",""," if(pathway.length>0){","","    loop(pathway, line, w, taxRate, total_amount);// add taxRate ratios","    "," }"," else{"," console.log(\"collection is empty\")"," next_node(total_amount)"," }","","    ","    ","    ","    function loop(pathway, line, w, taxRate, total_amount) {","    var c = 0","    // calculate taxRatio","    function calculate_taxRatio(pathway, line, w, taxRate, total_amount){","    var taxRate_y = pathway[w].taxRate","    if(taxRate_switch === false){","     taxRate_x = taxRate","     taxRate_ratio_x = 1","    }","    else taxRate_x = taxRate","    if(taxRate_y > taxRate_x)taxRate_y = taxRate_x","    var taxRate_ratio_y = Number(taxRate_y) / Number(taxRate_x)","    var taxRate_quota = Number(taxRate_ratio_x) * Number(taxRate_ratio_y)","    push_lines(taxRate_quota, total_amount)","    }","    calculate_taxRatio(pathway, line, w, taxRate, total_amount)","","    function push_lines(taxRate_quota, total_amount){","","    console.log(temp.indexOf(pathway[w].account))","    ","    // push lines","    if (temp.indexOf(pathway[w].account) === -1){","    temp+= pathway[w].account + \" \"","    line.push({account: pathway[w].account, currency: pathway[w].currency, taxRate: taxRate, taxRate_quota: taxRate_quota});","    taxRate_quota_temp.push(taxRate_quota)","    taxRate_quota_sum = Number(taxRate_quota_sum) + Number(taxRate_quota)","    c++","    }","    else console.log(\"CIRCULAR\");","    ","    w++;","    ","    if (w<pathway.length){loop(pathway, line, w, taxRate, total_amount)}","    else {","        if (c>0){","            console.log(line);//lists all dividend pathways in IOUs[0] for ACCOUNT_ID","            lines.push(line)","        };","        ","        next_node(total_amount)","    }","    }","    }","","      ","// STEP 2: branch out (add all dividend pathways for lines[x][i].account)        ","","","    function next_node(total_amount){","            if(x<lines.length){","            console.log(\"recursion nr \"+x)","        if(y<lines[x].length){","            console.log(\"taxRate_quota:\" +lines[x][y].taxRate_quota)","            taxRate_ratio_x = Number(lines[x][y].taxRate_quota)","            taxRate_x = lines[x][y].taxRate","            COLLECTION = db.collection(lines[x][y].account);","            y++;","            get_collection();","        }","                ","        else {","           x++;","           y = 0;","            console.log(\"recursion nr \"+x)","            get_collection()","        }","        ","            }","            else console.log(lines), console.log(\"END\"), outgoing_payments(total_amount)","        }","         ","             ","    // ------- SECOND, outgoing payments -----------------","    // see http://www.resilience.me/theory.html ","    function outgoing_payments(total_amount){","         var total_amount_pie = Number(total_amount)/taxRate_quota_sum","         ","         // create outgoing payment","         x = 0","         y = 0","         loop()","         function loop(){","","            if (x<lines.length){     ","                if (y<lines[x].length){","                ","                var amount = Number(total_amount_pie * lines[x][y].taxRate_quota)","                var currency = lines[x][y].currency","                var account = lines[x][y].account","                var payment = {account: account, amount: amount, currency: currency}","                ","                console.log(payment)","                y++","                loop()","                }","                else x++, loop()","            }else q++, console.log(\"swarm-redistribution for currency: \"+lines[0][0].currency +\" is done. loading next currency...\"),COLLECTION = db.collection(account_id), get_collection();","         }//create outgoing payments to everyone in the swarm","    }","   ","","        ","}//end swarm_redistribution()"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":16},"end":{"row":219,"column":27},"action":"remove","lines":["console.log"]},{"start":{"row":219,"column":16},"end":{"row":219,"column":17},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":17},"end":{"row":219,"column":18},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":17},"end":{"row":219,"column":18},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":16},"end":{"row":219,"column":17},"action":"remove","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":16},"end":{"row":219,"column":17},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":17},"end":{"row":219,"column":18},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":18},"end":{"row":219,"column":19},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":19},"end":{"row":219,"column":20},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":20},"end":{"row":219,"column":21},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":21},"end":{"row":219,"column":22},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":22},"end":{"row":219,"column":23},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":219,"column":23},"end":{"row":219,"column":24},"action":"insert","lines":["k"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":0},"end":{"row":231,"column":0},"action":"remove","lines":["// ---------------------------- swarm-redistribution ----------------------------------","","","","","// FIRST, collect data from the coin platform",""," // this example connects with http://client.basicincome.co","","","var COLLECTION = db.collection(account_id);","    ","    ","var q = 0//loop through all currencies","","function get_dividend_lines(callback){","    get_wallet()","    function get_wallet(){","    COLLECTION.find({type:\"tax_blob\"}, function(err,doc){","        ","        if(q<doc.length){","        var total_amount = doc[q].total_amount","        var currency = doc[q].currency","        console.log(doc)","        ","        // get the taxRate","        COLLECTION.findOne({type: \"wallet\", currency: doc[q].currency}, function(err,doc){","","        var taxRate=doc.taxRate;","","        get_dividend_pathway(taxRate, currency, total_amount)","        })","        }","        else console.log(\"swarm-redistribution finished for all currencies\")","    });","    }","    ","    function get_dividend_pathway(taxRate, currency, total_amount){","  ","    console.log(\"scanning collection: \"+ COLLECTION);","    COLLECTION.find({type: \"dividend_pathway\", currency: currency},function(err, doc) {","            console.log(taxRate)","","    callback(doc, taxRate, total_amount)","","    });","","}","","}","","        ","","var get_collection = function() {","    //connect your coin here, this is how you connect to the API","    //the callback feeds collection/dividend-pathways","    //this example connects with http://client.basicincome.co","get_dividend_lines(swarm_redistribution)","}","get_collection()","","","// -------------------------- STUFF:","// ALL THIS needs to be improved...","","    var lines = [];//lines.push(line)","   ","    ","    var x = 0;//recursion()","    var y = 0;//recursion()","   ","    var temp = \" \";","    ","    var taxRate_quota_temp = []","    var taxRate_quota_sum = 0","    var taxRate_switch = false","    var taxRate_x;","    var taxRate_ratio_x;","","","","","","// ---------------------- SWARM-REDISTRIBUTION ----------------------------","","function swarm_redistribution(pathway, taxRate, total_amount){","","","// ------- First, construct fractal dividend lines -----------------","// see http://www.resilience.me/theory.html","",""," var w = 0;"," var line = []",""," if(pathway.length>0){","","    loop(pathway, line, w, taxRate, total_amount);// add taxRate ratios","    "," }"," else{"," console.log(\"collection is empty\")"," next_node(total_amount)"," }","","    ","    ","    ","    function loop(pathway, line, w, taxRate, total_amount) {","    var c = 0","    // calculate taxRatio","    function calculate_taxRatio(pathway, line, w, taxRate, total_amount){","    var taxRate_y = pathway[w].taxRate","    if(taxRate_switch === false){","     taxRate_x = taxRate","     taxRate_ratio_x = 1","    }","    else taxRate_x = taxRate","    if(taxRate_y > taxRate_x)taxRate_y = taxRate_x","    var taxRate_ratio_y = Number(taxRate_y) / Number(taxRate_x)","    var taxRate_quota = Number(taxRate_ratio_x) * Number(taxRate_ratio_y)","    push_lines(taxRate_quota, total_amount)","    }","    calculate_taxRatio(pathway, line, w, taxRate, total_amount)","","    function push_lines(taxRate_quota, total_amount){","","    console.log(temp.indexOf(pathway[w].account))","    ","    // push lines","    if (temp.indexOf(pathway[w].account) === -1){","    temp+= pathway[w].account + \" \"","    line.push({account: pathway[w].account, currency: pathway[w].currency, taxRate: taxRate, taxRate_quota: taxRate_quota});","    taxRate_quota_temp.push(taxRate_quota)","    taxRate_quota_sum = Number(taxRate_quota_sum) + Number(taxRate_quota)","    c++","    }","    else console.log(\"CIRCULAR\");","    ","    w++;","    ","    if (w<pathway.length){loop(pathway, line, w, taxRate, total_amount)}","    else {","        if (c>0){","            console.log(line);//lists all dividend pathways in IOUs[0] for ACCOUNT_ID","            lines.push(line)","        };","        ","        next_node(total_amount)","    }","    }","    }","","      ","// STEP 2: branch out (add all dividend pathways for lines[x][i].account)        ","","","    function next_node(total_amount){","            if(x<lines.length){","            console.log(\"recursion nr \"+x)","        if(y<lines[x].length){","            console.log(\"taxRate_quota:\" +lines[x][y].taxRate_quota)","            taxRate_ratio_x = Number(lines[x][y].taxRate_quota)","            taxRate_x = lines[x][y].taxRate","            COLLECTION = db.collection(lines[x][y].account);","            y++;","            get_collection();","        }","                ","        else {","           x++;","           y = 0;","            console.log(\"recursion nr \"+x)","            get_collection()","        }","        ","            }","            else console.log(lines), console.log(\"END\"), outgoing_payments(total_amount)","        }","         ","             ","    // ------- SECOND, outgoing payments -----------------","    // see http://www.resilience.me/theory.html ","    function outgoing_payments(total_amount){","         var total_amount_pie = Number(total_amount)/taxRate_quota_sum","         ","         // create outgoing payment","         x = 0","         y = 0","         loop()","         function loop(){","","            if (x<lines.length){     ","                if (y<lines[x].length){","                ","                var amount = Number(total_amount_pie * lines[x][y].taxRate_quota)","                var currency = lines[x][y].currency","                var account = lines[x][y].account","                var payment = {account: account, amount: amount, currency: currency}","                ","                callback(payment)","                y++","                loop()","                }","                else x++, loop()","            }else q++, console.log(\"swarm-redistribution for currency: \"+lines[0][0].currency +\" is done. loading next currency...\"),COLLECTION = db.collection(account_id), get_collection();","         }//create outgoing payments to everyone in the swarm","    }","   ","","        ","}//end swarm_redistribution()",""]},{"start":{"row":19,"column":0},"end":{"row":228,"column":29},"action":"insert","lines":["// ---------------------------- swarm-redistribution ----------------------------------","","","","","// FIRST, collect data from the coin platform",""," // this example connects with http://client.basicincome.co","","var account_id = 'r46XJq7UJmoPno2cURDRs8bB9crRLJgpcY'","","var ACCOUNT_ID = db.collection(account_id);","","var COLLECTION = db.collection(account_id);","    ","    ","var q = 0//loop through all currencies","","function get_dividend_lines(callback){","    get_wallet()","    function get_wallet(){","    ACCOUNT_ID.find({type:\"tax_blob\"}, function(err,doc){","        ","        if(q<doc.length){","        var total_amount = doc[q].total_amount","        var currency = doc[q].currency","","        // get the taxRate","        ACCOUNT_ID.findOne({type: \"wallet\", currency: doc[q].currency}, function(err,doc){","","        var taxRate=doc.taxRate;","","        get_dividend_pathway(taxRate, currency, total_amount)","        })","        }","        else console.log(\"swarm-redistribution finished for all currencies\")","    });","    }","    ","    function get_dividend_pathway(taxRate, currency, total_amount){","  ","    console.log(\"scanning collection: \"+ COLLECTION);","    COLLECTION.find({type: \"dividend_pathway\", currency: currency},function(err, doc) {","","    callback(doc, taxRate, total_amount)","","    });","","}","","}","","        ","","var get_collection = function() {","    //connect your coin here, this is how you connect to the API","    //the callback feeds collection/dividend-pathways","    //this example connects with http://client.basicincome.co","get_dividend_lines(swarm_redistribution)","}","get_collection()","","","// -------------------------- STUFF:","// ALL THIS needs to be improved...","","    var lines = [];//lines.push(line)","   ","    ","    var x = 0;//recursion()","    var y = 0;//recursion()","    var z = 0","   ","    var temp = \" \";","    ","    var taxRate_quota_temp = []","    var taxRate_quota_sum = 0","    var taxRate_switch = false","    var taxRate_x;","    var taxRate_ratio_x;","","","","","","// ---------------------- SWARM-REDISTRIBUTION ----------------------------","","function swarm_redistribution(pathway, taxRate, total_amount){","","","// ------- First, construct fractal dividend lines -----------------","// see http://www.resilience.me/theory.html","",""," var w = 0;"," var line = []",""," if(pathway.length>0){","","    loop(pathway, line, w, taxRate, total_amount);// add taxRate ratios","    "," }"," else{"," console.log(\"collection is empty\")"," next_node(total_amount)"," }","","    ","    ","    ","    function loop(pathway, line, w, taxRate, total_amount) {","    // calculate taxRatio","    function calculate_taxRatio(pathway, line, w, taxRate, total_amount){","    var taxRate_y = pathway[w].taxRate","    if(taxRate_switch === false){","     taxRate_x = taxRate","     taxRate_ratio_x = 1","    }","    else taxRate_x = taxRate","    if(taxRate_y > taxRate_x)taxRate_y = taxRate_x","    var taxRate_ratio_y = Number(taxRate_y) / Number(taxRate_x)","    var taxRate_quota = Number(taxRate_ratio_x) * Number(taxRate_ratio_y)","    push_lines(taxRate_quota, total_amount)","    }","    calculate_taxRatio(pathway, line, w, taxRate, total_amount)","","    function push_lines(taxRate_quota, total_amount){","","    // push lines","    if (JSON.stringify(lines).indexOf(pathway[w].account) === -1 && pathway[w].account !== account_id){","    line.push({account: pathway[w].account, currency: pathway[w].currency, taxRate: taxRate, taxRate_quota: taxRate_quota});","    taxRate_quota_temp.push(taxRate_quota)","    taxRate_quota_sum = Number(taxRate_quota_sum) + Number(taxRate_quota)","    }","    else console.log(\"CIRCULAR\");","    ","    w++;","    ","    if (w<pathway.length){loop(pathway, line, w, taxRate, total_amount)}","    else {","        if (line.length>0){","            lines.push(line)","        };","        next_node(total_amount)","    }","    }","    }","","      ","// STEP 2: branch out (add all dividend pathways for lines[x][i].account)        ","","","    function next_node(total_amount){","            if(x<lines.length){","            ","                ","        if(y<lines[x].length){","             taxRate_ratio_x = Number(lines[x][y].taxRate_quota)","            taxRate_x = lines[x][y].taxRate","            COLLECTION = db.collection(lines[x][y].account);","            ","            y++;","            z++","            console.log(\"recursion nr \"+z)","            get_collection();","        }","                ","        else {","            x++;","            y = 0","            next_node(total_amount)","          ","        }","        ","            }","            else console.log(lines), console.log(\"generating payments...\"), outgoing_payments(total_amount)","        }","         ","             ","    // ------- SECOND, outgoing payments -----------------","    // see http://www.resilience.me/theory.html ","    function outgoing_payments(total_amount){","         var total_amount_pie = Number(total_amount)/taxRate_quota_sum","         ","         // create outgoing payment","         x = 0","         y = 0","         loop()","         function loop(){","","            if (x<lines.length){     ","                if (y<lines[x].length){","                ","                var amount = Number(total_amount_pie * lines[x][y].taxRate_quota)","                var currency = lines[x][y].currency","                var account = lines[x][y].account","                var payment = {account: account, amount: amount, currency: currency}","                ","                console.log(payment)","                y++","                loop()","                }","                else x++, loop()","            }else q++, console.log(\"swarm-redistribution for currency: \"+lines[0][0].currency +\" is done. loading next currency...\"),COLLECTION = db.collection(account_id), get_collection();","         }//create outgoing payments to everyone in the swarm","    }","   ","","        ","}//end swarm_redistribution()"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"remove","lines":["var account_id = 'r46XJq7UJmoPno2cURDRs8bB9crRLJgpcY'",""]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":20},"end":{"row":216,"column":26},"action":"remove","lines":["ole.lo"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":20},"end":{"row":216,"column":21},"action":"remove","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":19},"end":{"row":216,"column":20},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":18},"end":{"row":216,"column":19},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":17},"end":{"row":216,"column":18},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":16},"end":{"row":216,"column":17},"action":"remove","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":16},"end":{"row":216,"column":17},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":17},"end":{"row":216,"column":18},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":18},"end":{"row":216,"column":19},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":19},"end":{"row":216,"column":20},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":20},"end":{"row":216,"column":21},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":21},"end":{"row":216,"column":22},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":22},"end":{"row":216,"column":23},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":216,"column":23},"end":{"row":216,"column":24},"action":"insert","lines":["k"]}]}]]},"ace":{"folds":[],"scrolltop":2897.5,"scrollleft":0,"selection":{"start":{"row":225,"column":0},"end":{"row":225,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":192,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1417136455124,"hash":"353dbfab88d1eeb23c8597ae413262808f8d799d"}